Development setup
=================

Running nose tests with Jupyter is tricky, so there's a
run_tests.sh script for it.

To temporarily insert breakpoints for debugging: `from nose.tools import set_trace; set_trace()`

Tests have requirements not installed by setup.py:

- nose
- pandas

Release HOWTO
=============

To make a release,

  1) Update release date/version in NEWS.txt and setup.py
  2) Run 'python setup.py sdist'
  3) Test the generated source distribution in dist/
  4) Upload to PyPI: 'python setup.py sdist register upload'
  5) Increase version in setup.py (for next release)

  Get kusto_client
  1. link https://kusto.azurewebsites.net/docs/api/kusto_python_client_library.html
  2. launch anaconda prompt (folder "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Anaconda3 (64-bit)")
  2. pip install http://52.173.187.55/simple/kusto_client-0.4.0-py2.py3-none-any.whl
  3. pip install prettytable from PyPI



  Run test
  1. launch anaconda prompt (folder "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Anaconda3 (64-bit)")
  2. >cd c:\My Projects\KqlMagic\src
  3. >set TEST_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('j=Kk-h34J').cluster('Oiildc').database('OperationInsights_PFS_PROD')
  4. >set KQL_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('j=Kk-h34J').cluster('Oiildc').database('OperationInsights_PFS_PROD')
  5. >set HELP_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('j=Kk-h34J').cluster('help').database('Samples')
  6. >
  3  >ipython -c "import nose; nose.run()"

  Add to Jupyter Notebook
  1. %cd c:\My Projects\KqlMagic\src
  2. %load_ext kql               (in case of modified: %reload_ext kql)

  Hints:
  F11 toggle Chrome to full screen
  View/Toggle Header 
  View/Toggle Toolbar
  Kernel/Restart & Clear Output

  Visualization Technologies
  PlotLy (PlotLy)
  PixieDust (IBM)

  Notes for Jupyter Notebbok
      conda install -c conda-forge ipywidgets


  Notes for jupyter labs environment:
    1. need to install npm (and restart computer), to be able to install extensions
    2. A Plotly - enables use of plotly offline:
        jupyter labextension install @jupyterlab/plotly-extension
        jupyter labextension enable @jupyterlab/plotly-extension
    3. Add jupyter widgets extension:
        jupyter labextension install @jupyter-widgets/jupyterlab-manager@0.27.0
        jupyter labextension enable @jupyter-widgets/jupyterlab-manager
    4. Add qgrid extension:
        jupyter labextension install qgrid-jupyterlab@1.0.0-beta.7
        jupyter labextension enable qgrid-jupyterlab

    3. A JupyterLab extension for rendering JSON as a tree:
        jupyter labextension install @jupyterlab/json-extension

Update jupyter
conda update jupyter

run commandline
activate environment
  C:\Users\michabin\AppData\Local\Continuum\Anaconda3\Scripts\activate
  set TEST_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('z=Xx-h34Z').cluster('Oiildc').database('OperationInsights_PFS_PROD')
  // env default connection string
  set KQL_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('z=Xx-h34Z').cluster('Oiildc').database('OperationInsights_PFS_PROD')

  set HELP_CONNECTION_STR=kusto://username('michabin@microsoft.com').password('z=Xx-h34Z').cluster('help').database('Samples')
  set HELP_CONNECTION_STR=kusto://username('michabin@microsoft.com').cluster('help').database('Samples')
  set HELP_CONNECTION_STR=kusto://code().cluster('help').database('Samples')

  cd c:\My Projects
  jupyter lab | jupyter notebook
// set Path=C:\Users\michabin\AppData\Local\Continuum\Anaconda3;%Path%



Sharing notebook via gist
 - create a notebook
   - restart Kernel
   - clear all cells
   - run all
   - save notebook
   - download as ipynb
   - open file in text editor
   - copy the content of the file (CTRL-A, CTRL-C)
   ** Note: local resources such as local images won't be seen, make sure to provide a url instead to a shared store

 - publish the notebook in github gist
    - open with browser url: http://gist.github.com
    - paste the content of the file
    - give it a name with extension .ipynb
    - add description
    - publish by clicking the "Create Public Gist" botton 
        ** it will give it a url with anumber 

 - View the notebook with nbviewer
    - open with browser url: http://nbviewer.jupyter.org/
    - provide the gist number or Github username/repo or Github username

   

!pip install git+git://github.com/mbnshtck/jupyter-kql-magic.git
pip uninstall -y Kqlmagic 


